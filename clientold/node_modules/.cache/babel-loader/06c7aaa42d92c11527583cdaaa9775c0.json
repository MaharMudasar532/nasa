{"ast":null,"code":"async function httpGetPlanets() {\n  const result = await fetch(\"http://localhost:8000/planet\");\n  return result.json(); // TODO: Once API is ready.\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const result = await fetch(\"http://localhost:8000/lunches\");\n  const fetchedData = await result.json();\n  return fetchedData.sort((a, b) => {\n    return a.flightNumber = b.flightNumber;\n  }); // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  await fetch(\"http://localhost:8000/lunches\", {\n    method: \"post\",\n    body: JSON.stringify(launch)\n  }); // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/mudassar/nasa/client/src/hooks/requests.js"],"names":["httpGetPlanets","result","fetch","json","httpGetLaunches","fetchedData","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","JSON","stringify","httpAbortLaunch","id"],"mappings":"AAAA,eAAeA,cAAf,GAAgC;AAC9B,QAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA1B;AACA,SAAOD,MAAM,CAACE,IAAP,EAAP,CAF8B,CAI9B;AACA;AACD;;AAED,eAAeC,eAAf,GAAiC;AAC/B,QAAMH,MAAM,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA1B;AACA,QAAMG,WAAW,GAAG,MAAMJ,MAAM,CAACE,IAAP,EAA1B;AACA,SAAOE,WAAW,CAACC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChC,WAAQD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA3B;AACD,GAFM,CAAP,CAH+B,CAO/B;AACA;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,QAAMT,KAAK,CAAC,+BAAD,EAAkC;AAC3CU,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AAFqC,GAAlC,CAAX,CADsC,CAKtC;AACA;AACD;;AAED,eAAeK,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SAASjB,cAAT,EAAyBI,eAAzB,EAA0CM,gBAA1C,EAA4DM,eAA5D","sourcesContent":["async function httpGetPlanets() {\n  const result = await fetch(\"http://localhost:8000/planet\");\n  return result.json();\n\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const result = await fetch(\"http://localhost:8000/lunches\");\n  const fetchedData = await result.json();\n  return fetchedData.sort((a, b) => {\n    return (a.flightNumber = b.flightNumber);\n  });\n\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  await fetch(\"http://localhost:8000/lunches\", {\n    method: \"post\",\n    body: JSON.stringify(launch),\n  });\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}