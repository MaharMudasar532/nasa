{"ast":null,"code":"async function httpGetPlanets() {\n  const result = await fetch(\"http://localhost:8000/planet\");\n  return result.json(); // TODO: Once API is ready.\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const result = await fetch(\"http://localhost:8000/lunches\");\n  const fetchedData = await result.json();\n  return fetchedData.sort((a, b) => {\n    return a.flightNumber = b.flightNumber;\n  }); // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  await fetch(\"http://localhost:8000/lunches\", {\n    method: 'post',\n    body: launch\n  }); // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/mudassar/nasa/client/src/hooks/requests.js"],"names":["httpGetPlanets","result","fetch","json","httpGetLaunches","fetchedData","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","httpAbortLaunch","id"],"mappings":"AAAA,eAAeA,cAAf,GAAgC;AAChC,QAAOC,MAAM,GAAI,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,SAAOD,MAAM,CAACE,IAAP,EAAP,CAFgC,CAI9B;AACA;AACD;;AAED,eAAeC,eAAf,GAAiC;AAC/B,QAAOH,MAAM,GAAI,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,QAAMG,WAAW,GAAG,MAAMJ,MAAM,CAACE,IAAP,EAA1B;AACA,SAAOE,WAAW,CAACC,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAC7B,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP,CAH+B,CAO/B;AACA;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC,QAAMT,KAAK,CAAC,+BAAD,EAAiC;AAC1CU,IAAAA,MAAM,EAAC,MADmC;AAE1CC,IAAAA,IAAI,EAACF;AAFqC,GAAjC,CAAX,CADsC,CAKtC;AACA;AACD;;AAED,eAAeG,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEf,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIEI,eAJF","sourcesContent":["async function httpGetPlanets() {\nconst  result  = await fetch(\"http://localhost:8000/planet\");\nreturn result.json();\n\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const  result  = await fetch(\"http://localhost:8000/lunches\");\n  const fetchedData = await result.json();\n  return fetchedData.sort((a,b)=>{\n    return a.flightNumber = b.flightNumber;\n  })\n\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  await fetch(\"http://localhost:8000/lunches\",{\n    method:'post',\n    body:launch,\n  })\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}